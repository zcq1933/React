{"version":3,"sources":["Storage/storage.js","Todo/todoInput.js","Todo/todoing.js","Todo/todoList.js","index.js"],"names":["storage","setStorage","key","value","localStorage","setItem","JSON","stringify","getStorage","parse","getItem","removeStorage","removeItem","TodoInput","props","className","onKeyPress","this","keyEnter","React","Component","Todoing","checked","onChange","changeBox","title","onClick","deleteData","todoList","index","data","state","list","isck","setState","newData","setNum","splice","didNum","doNum","event","which","ele","target","listInfo","newList","push","console","log","map","v","k","bind","Index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d9b42d9d.chunk.js","sourcesContent":["let storage = {\r\n    setStorage(key,value) {\r\n        localStorage.setItem(key,JSON.stringify(value));\r\n\r\n    },\r\n    getStorage(key) {\r\n        return JSON.parse(localStorage.getItem(key));\r\n    },\r\n    removeStorage(key) {\r\n        localStorage.removeItem(key);\r\n    }\r\n}\r\n\r\nexport default storage;","import React from 'react';\r\nimport {Input} from 'antd';\r\nimport './todoInput.css';\r\n\r\n\r\nexport default class TodoInput extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <div className=\"titleLeft\"><h2>TodoList</h2></div>\r\n                <Input onKeyPress={this.props.keyEnter}></Input>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}","import React,{Component} from 'react';\r\nimport {Button,Checkbox} from 'antd';\r\n\r\nexport default class Todoing extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <li><Checkbox className = \"c1\"  checked={this.props.checked} onChange={this.props.changeBox}></Checkbox>{this.props.title}-----<Button onClick={this.props.deleteData}>删除</Button></li>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React,{Component} from 'react';\r\nimport storage from '../Storage/storage';\r\nimport 'antd/dist/antd.css'; \r\nimport {Check,Input,Button,List, Checkbox} from 'antd';\r\nimport './todoList.css';\r\nimport TodoInput from './todoInput';\r\nimport Todoing from './todoing';\r\n\r\n\r\n\r\nexport default class todoList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            didNum:0,\r\n            doNum:0,\r\n            list:[\r\n                {\r\n                    title:'Php',\r\n                    isck:false\r\n                    \r\n                },\r\n                {\r\n                    title:\"React\",\r\n                    isck:true\r\n                }\r\n            ]                             \r\n        };\r\n    };\r\n    \r\n    // setNum() {\r\n    //     var dosum = 0;\r\n    //     var didsum = 0;\r\n    //     this.state.list.map((v,k)=> {\r\n    //         if(v.isck) {\r\n    //             console.log(\"did\");\r\n    //             didsum++;\r\n    //             console.log(didsum);\r\n    //             console.log(didsum+\"didsum\");\r\n    //             this.setState({\r\n    //                 didNum:didsum\r\n    //             })\r\n    //         }\r\n    //         else {\r\n    //             dosum++;\r\n    //             this.setState({\r\n    //                 doNum:dosum\r\n    //             })\r\n    //         }\r\n            \r\n    //     })\r\n        \r\n        \r\n    //     // console.log(\"did:\"+this.state.didNum)\r\n    // }\r\n\r\n\r\n    // 加载缓存\r\n    componentDidMount() {\r\n        // 读取缓存 \r\n        let data = storage.getStorage(\"lists\");\r\n        if(data) {\r\n            this.setState({\r\n                list:data\r\n            },()=>{\r\n                this.setNum();\r\n            });\r\n        }\r\n        // console.log(this)\r\n        \r\n    }\r\n    //回车事件\r\n    keyEnter(event) {\r\n        if(event.which === 13) {\r\n            var ele = event.target;\r\n            let listInfo = {\r\n                title:ele.value,\r\n                isck:false\r\n            };\r\n            let newList = this.state.list;\r\n            newList.push(listInfo);\r\n            this.setState({\r\n                list:newList\r\n            },()=> {\r\n                ele.value=\"\";   \r\n                storage.setStorage(\"lists\",newList);\r\n                this.setNum(this);\r\n            });\r\n            \r\n        }\r\n        \r\n    }\r\n    setNum() {\r\n\r\n        console.log(this);\r\n        let didNum = 0;\r\n        let doNum = 0;\r\n        console.log(this.state.list);\r\n        this.state.list.map((v,k)=> {\r\n            // 检查是不是完成了\r\n            if(v.isck) {\r\n                didNum++;\r\n                \r\n            }\r\n            else {\r\n                doNum++\r\n            }\r\n\r\n            //  return \"\";\r\n        })\r\n        console.log(\"doNum\"+doNum);\r\n        console.log(\"didNum\" + didNum);\r\n        this.setState({\r\n            doNum:doNum,\r\n            didNum:didNum\r\n        })\r\n    }\r\n    // 监听事件  切换状态\r\n    changeBox=(index)=> {\r\n        // 获取列表\r\n        let data = this.state.list;\r\n        data[index].isck = !(data[index].isck);\r\n        this.setState({\r\n            list:data,\r\n            isck:!(this.state.isck)\r\n        },()=> {\r\n            let newData = this.state.list;\r\n            storage.setStorage(\"lists\",newData);\r\n            this.setNum(this);\r\n\r\n        });\r\n        \r\n    }\r\n    \r\n    // 删除事件\r\n    deleteData = (index)=> {\r\n        let data = this.state.list;\r\n        data.splice(index,1);\r\n        storage.setStorage(\"lists\",data);\r\n        this.setState({\r\n            list:data\r\n        },()=> {\r\n            this.setNum(this);\r\n        })\r\n        \r\n    }\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className = \"block\">\r\n                        {/*<Input type=\"text\" onKeyPress={this.keyEnter}></Input>*/}\r\n                <TodoInput keyEnter = {this.keyEnter.bind(this)} onKeyPress={this.keyEnter}/>\r\n\r\n                <div>\r\n                    <ul>\r\n                        <h3>未完成</h3>\r\n                        <p className=\"num\">{this.state.doNum}</p>\r\n                        {\r\n                            this.state.list.map((v,k)=> {\r\n                                // 检查是不是完成了\r\n                                if(!v.isck) {\r\n                                    return (\r\n                                        <div key={k}>\r\n                                            <Todoing checked={v.isck} changeBox={this.changeBox.bind(this,k)} deleteData={this.deleteData.bind(this,k)} title={v.title}></Todoing>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                                return \"\";\r\n                            })\r\n                        }\r\n                        \r\n                    </ul>\r\n                    <ul>\r\n                    <h3>已完成</h3>\r\n                    <p className=\"num\">{this.state.didNum}</p>\r\n                        {\r\n                            \r\n                            this.state.list.map((v,k)=> {\r\n                                if(v.isck) {\r\n                                    return (\r\n                                        <div key={k}>\r\n                                            <Todoing checked={v.isck} changeBox={this.changeBox.bind(this,k)} deleteData={this.deleteData.bind(this,k)} title={v.title}></Todoing>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                                return \"\";\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n\r\n            </div>\r\n            </div>\r\n\r\n)\r\n}\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TodoList from './Todo/todoList';\n\nexport default class Index extends React.Component {\n  constructor(){\n    super();\n  };\n  render() {\n    return (\n        <TodoList/>\n    );\n  }\n}\n\nReactDOM.render(<Index/>,document.getElementById(\"root\"));"],"sourceRoot":""}